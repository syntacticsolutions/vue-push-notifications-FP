{"remainingRequest":"/Users/sisuser/push-notification-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sisuser/push-notification-frontend/src/components/PushNotificationSubscriber.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sisuser/push-notification-frontend/src/components/PushNotificationSubscriber.vue","mtime":1544660082902},{"path":"/Users/sisuser/push-notification-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sisuser/push-notification-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sisuser/push-notification-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sisuser/push-notification-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\n\nimport { Button } from 'element-ui'\nimport firebase from 'firebase'\nfirebase.initializeApp()\n\nlet messaging\n// const push = firebase.messaging()\n\nif (firebase.messaging.isSupported()) {\n  messaging = firebase.messaging()\n}\n\nexport default {\n  name: 'PushNotificationSubscriber',\n  components: {\n    \"el-button\": Button\n  },\n  props: {\n    \n  },\n  methods: {\n    subscribe () {\n      push\n        .requestPermission()\n        .then(function() {\n          alert('Notification permission granted.');\n          // TODO(developer): Retrieve an Instance ID token for use with FCM.\n          // ...\n        })\n        .catch(function(err) {\n          alert('Unable to get permission to notify.', err);\n        });\n    }\n  },\n  mounted () {\n    if (firebase.messaging.isSupported()) {\n      messaging = firebase.messaging()\n      push.usePublicVapidKey('BClln4-5tyIfJV2a80sfTsRiqpg1C71gLqfcBUrgswcQOmRANOzGWtM4TYIA9DWP2HOqjn5XUvPrTzbNBfSAcd4')\n    }\n  }\n}\n",{"version":3,"sources":["PushNotificationSubscriber.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PushNotificationSubscriber.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"push-notification-subscriber\">\n    <el-button @click=\"subscribe\">Subscribe</el-button>\n  </div>\n</template>\n\n<script>\n\nimport { Button } from 'element-ui'\nimport firebase from 'firebase'\nfirebase.initializeApp()\n\nlet messaging\n// const push = firebase.messaging()\n\nif (firebase.messaging.isSupported()) {\n  messaging = firebase.messaging()\n}\n\nexport default {\n  name: 'PushNotificationSubscriber',\n  components: {\n    \"el-button\": Button\n  },\n  props: {\n    \n  },\n  methods: {\n    subscribe () {\n      push\n        .requestPermission()\n        .then(function() {\n          alert('Notification permission granted.');\n          // TODO(developer): Retrieve an Instance ID token for use with FCM.\n          // ...\n        })\n        .catch(function(err) {\n          alert('Unable to get permission to notify.', err);\n        });\n    }\n  },\n  mounted () {\n    if (firebase.messaging.isSupported()) {\n      messaging = firebase.messaging()\n      push.usePublicVapidKey('BClln4-5tyIfJV2a80sfTsRiqpg1C71gLqfcBUrgswcQOmRANOzGWtM4TYIA9DWP2HOqjn5XUvPrTzbNBfSAcd4')\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}